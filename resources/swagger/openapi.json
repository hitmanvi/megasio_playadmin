{
  "openapi": "3.0.0",
  "info": {
    "title": "Admin API",
    "description": "Admin authentication API endpoints",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8000/api",
      "description": "Local development server"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": ["Admin Authentication"],
        "summary": "Admin login",
        "description": "Authenticate admin user and return access token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "password"],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Admin username",
                    "example": "admin"
                  },
                  "password": {
                    "type": "string",
                    "description": "Admin password",
                    "example": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": ["Admin Authentication"],
        "summary": "Admin logout",
        "description": "Logout admin user and revoke access token",
        "security": [
          {
            "sanctum": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mine": {
      "get": {
        "tags": ["Admin Authentication"],
        "summary": "Get current admin info",
        "description": "Get information about the currently authenticated admin",
        "security": [
          {
            "sanctum": []
          }
        ],
        "responses": {
          "200": {
            "description": "Admin information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MineResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tags": {
      "get": {
        "tags": ["Tags"],
        "summary": "Get tags list",
        "description": "Get paginated list of tags with optional type filtering and translations",
        "security": [
          {
            "sanctum": []
          }
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Filter tags by type (theme or category)",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["theme", "category"]
            }
          },
          {
            "name": "enabled",
            "in": "query",
            "description": "Filter tags by enabled status (true or false)",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 15
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale for translated name",
            "required": false,
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tags list retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 0
                    },
                    "errmsg": {
                      "type": "string",
                      "example": ""
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Tag"
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "current_page": {
                              "type": "integer",
                              "example": 1
                            },
                            "last_page": {
                              "type": "integer",
                              "example": 10
                            },
                            "total": {
                              "type": "integer",
                              "example": 100
                            }
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "example": 1
                        },
                        "last_page": {
                          "type": "integer",
                          "example": 10
                        },
                        "total": {
                          "type": "integer",
                          "example": 100
                        }
                      }
                    },
                    "extra": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Tags"],
        "summary": "Create tag",
        "description": "Create a new tag with translations",
        "security": [
          {
            "sanctum": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["type", "translations"],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["theme", "category"],
                    "description": "Tag type"
                  },
                  "icon": {
                    "type": "string",
                    "description": "Tag icon",
                    "maxLength": 255,
                    "nullable": true
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Whether tag is enabled",
                    "nullable": true
                  },
                  "translations": {
                    "type": "object",
                    "description": "Translations for the tag name",
                    "additionalProperties": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "example": {
                      "en": "Action",
                      "zh-CN": "动作",
                      "ja": "アクション"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tag created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "integer", "example": 0 },
                    "errmsg": { "type": "string", "example": "" },
                    "data": { "$ref": "#/components/schemas/Tag" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/tags/{id}": {
      "get": {
        "tags": ["Tags"],
        "summary": "Get tag details",
        "description": "Get detailed information about a specific tag",
        "security": [
          {
            "sanctum": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Tag ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale for translated name",
            "required": false,
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tag details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 0
                    },
                    "errmsg": {
                      "type": "string",
                      "example": ""
                    },
                    "data": {
                      "$ref": "#/components/schemas/Tag"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Tag not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Tags"],
        "summary": "Update tag",
        "description": "Update tag with translations support",
        "security": [
          {
            "sanctum": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Tag ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["translations"],
                "properties": {
                  "icon": {
                    "type": "string",
                    "description": "Tag icon",
                    "maxLength": 255,
                    "nullable": true
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Whether tag is enabled",
                    "nullable": true
                  },
                  "translations": {
                    "type": "object",
                    "description": "Translations for the tag name",
                    "additionalProperties": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "example": {
                      "en": "Action",
                      "zh-CN": "动作",
                      "ja": "アクション"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tag updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 0
                    },
                    "errmsg": {
                      "type": "string",
                      "example": ""
                    },
                    "data": {
                      "$ref": "#/components/schemas/Tag"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Tag not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brands": {
      "get": {
        "tags": ["Brands"],
        "summary": "Get brands list",
        "description": "Get paginated list of brands with optional filtering",
        "security": [
          {
            "sanctum": []
          }
        ],
        "parameters": [
          {
            "name": "provider",
            "in": "query",
            "description": "Filter brands by provider",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "enabled",
            "in": "query",
            "description": "Filter brands by enabled status",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Brands list retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 0
                    },
                    "errmsg": {
                      "type": "string",
                      "example": ""
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Brand"
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "current_page": {
                              "type": "integer",
                              "example": 1
                            },
                            "last_page": {
                              "type": "integer",
                              "example": 10
                            },
                            "total": {
                              "type": "integer",
                              "example": 100
                            }
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "example": 1
                        },
                        "last_page": {
                          "type": "integer",
                          "example": 10
                        },
                        "total": {
                          "type": "integer",
                          "example": 100
                        }
                      }
                    },
                    "extra": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Brands"],
        "summary": "Create brand",
        "description": "Create a new brand",
        "security": [
          {
            "sanctum": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "provider"],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Brand name",
                    "maxLength": 255
                  },
                  "provider": {
                    "type": "string",
                    "description": "Brand provider",
                    "maxLength": 255
                  },
                  "restricted_region": {
                    "type": "array",
                    "description": "Restricted regions list",
                    "items": {
                      "type": "string"
                    }
                  },
                  "sort_id": {
                    "type": "integer",
                    "description": "Sort order",
                    "minimum": 0
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Whether brand is enabled"
                  },
                  "maintain_start": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Maintenance start time"
                  },
                  "maintain_end": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Maintenance end time"
                  },
                  "maintain_auto": {
                    "type": "boolean",
                    "description": "Whether maintenance is automatic"
                  },
                  "maintain_week_day": {
                    "type": "integer",
                    "description": "Maintenance day of week (0=Sunday, 1=Monday, ..., 6=Saturday)",
                    "minimum": 0,
                    "maximum": 6
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Brand created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 0
                    },
                    "errmsg": {
                      "type": "string",
                      "example": ""
                    },
                    "data": {
                      "$ref": "#/components/schemas/Brand"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brands/options": {
      "get": {
        "tags": ["Brands"],
        "summary": "Get brand options",
        "description": "Get brand options by type (coin, language, region)",
        "security": [
          {
            "sanctum": []
          }
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Type of options to retrieve",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["coin", "language", "region"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Brand options retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 0
                    },
                    "errmsg": {
                      "type": "string",
                      "example": ""
                    },
                    "data": {
                      "type": "array",
                      "description": "Array of options for the specified type",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brands/{id}": {
      "get": {
        "tags": ["Brands"],
        "summary": "Get brand details",
        "description": "Get detailed information about a specific brand",
        "security": [
          {
            "sanctum": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Brand ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Brand details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 0
                    },
                    "errmsg": {
                      "type": "string",
                      "example": ""
                    },
                    "data": {
                      "$ref": "#/components/schemas/Brand"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Brand not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Brands"],
        "summary": "Update brand",
        "description": "Update brand information",
        "security": [
          {
            "sanctum": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Brand ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Brand name",
                    "maxLength": 255
                  },
                  "provider": {
                    "type": "string",
                    "description": "Brand provider",
                    "maxLength": 255
                  },
                  "restricted_region": {
                    "type": "array",
                    "description": "Restricted regions list",
                    "items": {
                      "type": "string"
                    }
                  },
                  "sort_id": {
                    "type": "integer",
                    "description": "Sort order",
                    "minimum": 0
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Whether brand is enabled"
                  },
                  "maintain_start": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Maintenance start time"
                  },
                  "maintain_end": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Maintenance end time"
                  },
                  "maintain_auto": {
                    "type": "boolean",
                    "description": "Whether maintenance is automatic"
                  },
                  "maintain_week_day": {
                    "type": "integer",
                    "description": "Maintenance day of week (0=Sunday, 1=Monday, ..., 6=Saturday)",
                    "minimum": 0,
                    "maximum": 6
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Brand updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 0
                    },
                    "errmsg": {
                      "type": "string",
                      "example": ""
                    },
                    "data": {
                      "$ref": "#/components/schemas/Brand"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Brand not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Brands"],
        "summary": "Delete brand",
        "description": "Delete a brand",
        "security": [
          {
            "sanctum": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Brand ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Brand deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 0
                    },
                    "errmsg": {
                      "type": "string",
                      "example": ""
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Brand deleted successfully"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Brand not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brands/{brand_id}/details": {
      "post": {
        "tags": ["Brands"],
        "summary": "Create brand detail",
        "description": "Create a new brand detail for a specific brand",
        "security": [
          {
            "sanctum": []
          }
        ],
        "parameters": [
          {
            "name": "brand_id",
            "in": "path",
            "description": "Brand ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "coin": {
                    "type": "string",
                    "description": "Currency type",
                    "maxLength": 255,
                    "nullable": true
                  },
                  "support": {
                    "type": "boolean",
                    "description": "Whether supported"
                  },
                  "configured": {
                    "type": "boolean",
                    "description": "Whether configured"
                  },
                  "game_count": {
                    "type": "integer",
                    "description": "Number of games",
                    "minimum": 0
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Whether enabled"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Brand detail created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 0
                    },
                    "errmsg": {
                      "type": "string",
                      "example": ""
                    },
                    "data": {
                      "$ref": "#/components/schemas/BrandDetail"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Brand not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brands/{brand_id}/details/{detail_id}": {
      "put": {
        "tags": ["Brands"],
        "summary": "Update brand detail",
        "description": "Update brand detail information",
        "security": [
          {
            "sanctum": []
          }
        ],
        "parameters": [
          {
            "name": "brand_id",
            "in": "path",
            "description": "Brand ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "detail_id",
            "in": "path",
            "description": "Brand detail ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "coin": {
                    "type": "string",
                    "description": "Currency type",
                    "maxLength": 255,
                    "nullable": true
                  },
                  "support": {
                    "type": "boolean",
                    "description": "Whether supported"
                  },
                  "configured": {
                    "type": "boolean",
                    "description": "Whether configured"
                  },
                  "game_count": {
                    "type": "integer",
                    "description": "Number of games",
                    "minimum": 0
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Whether enabled"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Brand detail updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 0
                    },
                    "errmsg": {
                      "type": "string",
                      "example": ""
                    },
                    "data": {
                      "$ref": "#/components/schemas/BrandDetail"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Brand or brand detail not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Brands"],
        "summary": "Delete brand detail",
        "description": "Delete a brand detail",
        "security": [
          {
            "sanctum": []
          }
        ],
        "parameters": [
          {
            "name": "brand_id",
            "in": "path",
            "description": "Brand ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "detail_id",
            "in": "path",
            "description": "Brand detail ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Brand detail deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 0
                    },
                    "errmsg": {
                      "type": "string",
                      "example": ""
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Brand detail deleted successfully"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Brand or brand detail not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/upload": {
      "post": {
        "tags": ["Upload"],
        "summary": "Upload file",
        "description": "Upload a file to S3 storage",
        "security": [
          {
            "sanctum": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["file_name"],
                "properties": {
                  "file_name": {
                    "type": "string",
                    "format": "binary",
                    "description": "File to upload"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 0
                    },
                    "errmsg": {
                      "type": "string",
                      "example": ""
                    },
                    "data": {
                      "type": "string",
                      "description": "File URL",
                      "example": "https://s3.amazonaws.com/bucket/20240101/123456789.apk"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/games": {
      "get": {
        "tags": ["Games"],
        "summary": "Get games list",
        "description": "Get paginated list of games with various filters",
        "security": [
          {
            "sanctum": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Filter games by name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "out_id",
            "in": "query",
            "description": "Filter games by external ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "enabled",
            "in": "query",
            "description": "Filter games by enabled status",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "brand_name",
            "in": "query",
            "description": "Filter games by brand name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category_id",
            "in": "query",
            "description": "Filter games by category ID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "theme_id",
            "in": "query",
            "description": "Filter games by theme ID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "theme_ready",
            "in": "query",
            "description": "Filter games by theme readiness",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "localization_set",
            "in": "query",
            "description": "Filter games by localization setup",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "thumbnail_uploaded",
            "in": "query",
            "description": "Filter games by thumbnail upload status",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "memo_present",
            "in": "query",
            "description": "Filter games by memo presence",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale for translated name",
            "required": false,
            "schema": {
              "type": "string",
              "example": "en"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Games list retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 0
                    },
                    "errmsg": {
                      "type": "string",
                      "example": ""
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Game"
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "current_page": {
                              "type": "integer",
                              "example": 1
                            },
                            "last_page": {
                              "type": "integer",
                              "example": 10
                            },
                            "total": {
                              "type": "integer",
                              "example": 100
                            }
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "example": 1
                        },
                        "last_page": {
                          "type": "integer",
                          "example": 10
                        },
                        "total": {
                          "type": "integer",
                          "example": 100
                        }
                      }
                    },
                    "extra": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/games/{id}": {
      "get": {
        "tags": ["Games"],
        "summary": "Get game details",
        "description": "Get detailed information about a specific game",
        "security": [
          {
            "sanctum": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Game ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale for translated name",
            "required": false,
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Game details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 0
                    },
                    "errmsg": {
                      "type": "string",
                      "example": ""
                    },
                    "data": {
                      "$ref": "#/components/schemas/Game"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Game not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Games"],
        "summary": "Update game",
        "description": "Update game information",
        "security": [
          {
            "sanctum": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Game ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "brand_id": {
                    "type": "integer",
                    "description": "Brand ID",
                    "nullable": true
                  },
                  "category_id": {
                    "type": "integer",
                    "description": "Category ID",
                    "nullable": true
                  },
                  "theme_id": {
                    "type": "integer",
                    "description": "Theme ID",
                    "nullable": true
                  },
                  "out_id": {
                    "type": "string",
                    "description": "External ID",
                    "maxLength": 255,
                    "nullable": true
                  },
                  "name": {
                    "type": "string",
                    "description": "Game name",
                    "maxLength": 255,
                    "nullable": true
                  },
                  "thumbnail": {
                    "type": "string",
                    "description": "Thumbnail URL",
                    "maxLength": 255,
                    "nullable": true
                  },
                  "sort_id": {
                    "type": "integer",
                    "description": "Sort order",
                    "minimum": 0,
                    "nullable": true
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Whether game is enabled",
                    "nullable": true
                  },
                  "memo": {
                    "type": "string",
                    "description": "Memo text",
                    "nullable": true
                  },
                  "translations": {
                    "type": "object",
                    "description": "Translations for the game name",
                    "additionalProperties": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "example": {
                      "en": "Game Name",
                      "zh-CN": "游戏名称",
                      "ja": "ゲーム名"
                    },
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Game updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 0
                    },
                    "errmsg": {
                      "type": "string",
                      "example": ""
                    },
                    "data": {
                      "$ref": "#/components/schemas/Game"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Game not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "sanctum": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Enter the token with the `Bearer ` prefix, e.g. \"Bearer abcde12345\""
      }
    },
    "schemas": {
      "Admin": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Admin ID"
          },
          "name": {
            "type": "string",
            "description": "Admin username"
          }
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Tag ID"
          },
          "name": {
            "type": "string",
            "description": "Tag name (translated for specified locale)"
          },
          "type": {
            "type": "string",
            "description": "Tag type",
            "enum": ["theme", "category"],
            "example": "theme"
          },
          "icon": {
            "type": "string",
            "description": "Tag icon",
            "maxLength": 255,
            "nullable": true,
            "example": "fas fa-gamepad"
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether tag is enabled",
            "example": true
          },
          "translations": {
            "type": "object",
            "description": "All translations for the tag name",
            "additionalProperties": {
              "type": "string"
            },
            "example": {
              "en": "Action",
              "zh-CN": "动作",
              "ja": "アクション"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "Brand": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Brand ID"
          },
          "name": {
            "type": "string",
            "description": "Brand name"
          },
          "provider": {
            "type": "string",
            "description": "Brand provider"
          },
          "restricted_region": {
            "type": "array",
            "description": "Restricted regions list",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "sort_id": {
            "type": "integer",
            "description": "Sort order"
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether brand is enabled"
          },
          "maintain_start": {
            "type": "string",
            "format": "date-time",
            "description": "Maintenance start time",
            "nullable": true
          },
          "maintain_end": {
            "type": "string",
            "format": "date-time",
            "description": "Maintenance end time",
            "nullable": true
          },
          "maintain_auto": {
            "type": "boolean",
            "description": "Whether maintenance is automatic"
          },
          "maintain_week_day": {
            "type": "integer",
            "description": "Maintenance day of week (0=Sunday, 1=Monday, ..., 6=Saturday)",
            "minimum": 0,
            "maximum": 6,
            "nullable": true
          },
          "is_in_maintenance": {
            "type": "boolean",
            "description": "Whether brand is currently in maintenance"
          },
          "details": {
            "type": "array",
            "description": "Brand details",
            "items": {
              "$ref": "#/components/schemas/BrandDetail"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "BrandDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Brand detail ID"
          },
          "brand_id": {
            "type": "integer",
            "description": "Brand ID"
          },
          "coin": {
            "type": "string",
            "description": "Currency type",
            "nullable": true
          },
          "support": {
            "type": "boolean",
            "description": "Whether supported"
          },
          "configured": {
            "type": "boolean",
            "description": "Whether configured"
          },
          "game_count": {
            "type": "integer",
            "description": "Number of games"
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether enabled"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "Game": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Game ID"
          },
          "brand_id": {
            "type": "integer",
            "description": "Brand ID"
          },
          "category_id": {
            "type": "integer",
            "description": "Category ID"
          },
          "theme_id": {
            "type": "integer",
            "description": "Theme ID"
          },
          "out_id": {
            "type": "string",
            "description": "External ID"
          },
          "name": {
            "type": "string",
            "description": "Game name (translated for specified locale)"
          },
          "thumbnail": {
            "type": "string",
            "description": "Thumbnail URL",
            "nullable": true
          },
          "sort_id": {
            "type": "integer",
            "description": "Sort order"
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether game is enabled"
          },
          "memo": {
            "type": "string",
            "description": "Memo text",
            "nullable": true
          },
          "name_translations": {
            "type": "object",
            "description": "All translations for the game name",
            "additionalProperties": {
              "type": "string"
            },
            "example": {
              "en": "Game Name",
              "zh-CN": "游戏名称",
              "ja": "ゲーム名"
            }
          },
          "brand": {
            "type": "object",
            "description": "Brand information",
            "nullable": true,
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "provider": {
                "type": "string"
              }
            }
          },
          "category": {
            "type": "object",
            "description": "Category information",
            "nullable": true,
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            }
          },
          "theme": {
            "type": "object",
            "description": "Theme information",
            "nullable": true,
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "enabled": {
                "type": "boolean"
              }
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["name", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Admin username"
          },
          "password": {
            "type": "string",
            "description": "Admin password"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": 0
          },
          "errmsg": {
            "type": "string",
            "example": ""
          },
          "data": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "description": "Bearer token for authentication"
              }
            }
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": 0
          },
          "errmsg": {
            "type": "string",
            "example": ""
          },
          "data": {
            "type": "null"
          }
        }
      },
      "MineResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": 0
          },
          "errmsg": {
            "type": "string",
            "example": ""
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": 1
              },
              "name": {
                "type": "string",
                "example": "admin"
              }
            }
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Error code"
          },
          "errmsg": {
            "type": "string",
            "description": "Error message"
          },
          "data": {
            "type": "object",
            "description": "Additional error data",
            "nullable": true
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Admin Authentication",
      "description": "Admin authentication endpoints"
    },
    {
      "name": "Tags",
      "description": "Tag management endpoints"
    },
    {
      "name": "Brands",
      "description": "Brand management endpoints"
    },
    {
      "name": "Upload",
      "description": "File upload endpoints"
    },
    {
      "name": "Games",
      "description": "Game management endpoints"
    }
  ]
}

